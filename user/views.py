from django.shortcuts import render, redirect
from .models import Question
from django.contrib.auth.models import User
from django.contrib.auth import login
from .forms import StudentRegistrationForm
from django.core.paginator import Paginator
from django.contrib.auth import login, logout, authenticate
from django.contrib.auth.decorators import login_required

# def register(request):
#     if request.method == 'POST':
#         form = StudentRegistrationForm(request.POST)
#         if form.is_valid():
#             user = form.save(commit=False)
#             user.set_password(form.cleaned_data['password'])
#             user.save()
#             print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user.first_name}, –ø–∞—Ä–æ–ª—å: {form.cleaned_data['password']}")
#             return redirect('login')
#         else:
#             print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {form.errors}")
#     else:
#         form = StudentRegistrationForm()
#     return render(request, 'register.html', {'form': form})
#
# def student_login(request):
#     if request.method == 'POST':
#         form = StudentLoginForm(data=request.POST)
#         if form.is_valid():
#             first_name = form.cleaned_data['username']
#             password = form.cleaned_data['password']
#             print(f"üîç –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞: first_name={first_name}, password={password}")
#             user = authenticate(request, username=first_name, password=password)
#             if user is not None:
#                 print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥: {user.first_name}")
#                 login(request, user)
#                 return redirect('home')
#             else:
#                 print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
#                 form.add_error(None, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å.")
#         else:
#             print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞: {form.errors}")
#     else:
#         form = StudentLoginForm()
#     return render(request, 'login.html', {'form': form})
#
#

def register_student(request):
    if request.method == "POST":
        form = StudentRegistrationForm(request.POST)
        if form.is_valid():
            user = User.objects.create_user(
                username=form.cleaned_data["first_name"],  # –ò–ª–∏ –¥—Ä—É–≥–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
                password=form.cleaned_data["password"]
            )
            student = form.save(commit=False)
            student.user = user  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            student.save()
            login(request, user)

            return redirect("home")
    else:
        form = StudentRegistrationForm()
    return render(request, "register.html", {"form": form})

def student_login(request):
    if request.method == "POST":
        username = request.POST.get("username")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º username
        password = request.POST.get("password")
        student = authenticate(request, username=username, password=password)  # –ó–¥–µ—Å—å username
        if student is not None:
            login(request, student)
            return redirect("home")  # –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        else:
            return render(request, "login.html", {"error": "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"})
    return render(request, "login.html")

def student_logout(request):
    logout(request)
    return redirect('login')

#
# def dashboard(request):
#     return render(request, 'dashboard.html', {'user': request.user})



@login_required
def quiz_list(request):
    language = request.GET.get('lang', 'uz')
    questions = Question.objects.filter(language=language).prefetch_related('choices')
    return render(request, 'index.html', {
        'questions': questions,
        'current_language': language,
        'user': request.user
    })